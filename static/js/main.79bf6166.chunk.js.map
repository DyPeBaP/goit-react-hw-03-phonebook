{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","helpers/filter.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","handleAddContact","this","className","s","formBox","onSubmit","labelName","itemName","inputName","type","pattern","title","required","onChange","labelNumber","itemNumber","inputNumber","buttonAdd","Component","ContactList","contacts","deliteContact","list","map","id","item","buttonDelete","onClick","Filter","filter","handleChangeFilter","nameFilter","inputFilter","initialContacts","App","contact","some","userName","alert","prevState","shortid","generate","JSON","parse","localStorage","getItem","setItem","stringify","app","toLowerCase","includes","trim","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79bf6166.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"ContactForm_formBox__1QGmP\",\"itemName\":\"ContactForm_itemName__3OYjG\",\"itemNumber\":\"ContactForm_itemNumber__2CFsD\",\"inputName\":\"ContactForm_inputName__2jIHH\",\"inputNumber\":\"ContactForm_inputNumber__2EjvA\",\"buttonAdd\":\"ContactForm_buttonAdd__22uii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameFilter\":\"Filter_nameFilter__2clVr\",\"inputFilter\":\"Filter_inputFilter__2ftyx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__NRPSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1nTOl\",\"item\":\"ContactList_item__1hww1\",\"name\":\"ContactList_name__3ndzC\",\"number\":\"ContactList_number__23jn1\",\"buttonDelete\":\"ContactList_buttonDelete__2RvEO\"};","import { Component } from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) =>\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.handleAddContact(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n    render() {\r\n      const { handleChange, handleSubmit, state: { name, number } } = this;\r\n    return (\r\n      <form className={s.formBox} onSubmit={handleSubmit}>\r\n        <label className={s.labelName}>\r\n          <p className={s.itemName}>Name</p>\r\n          <input\r\n            className={s.inputName}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label className={s.labelNumber}>\r\n          <p className={s.itemNumber}>Number</p>\r\n          <input\r\n            className={s.inputNumber}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button className={s.buttonAdd} type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleAddContact: PropTypes.func.isRequired,\r\n};","import s from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList({ contacts, deliteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className={s.name}>Name: {name}</p>\r\n          <p className={s.number}>Number: {number}</p>\r\n          <button\r\n            className={s.buttonDelete}\r\n            type=\"button\"\r\n            onClick={() => deliteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deliteContact: PropTypes.func.isRequired,\r\n};","import s from \"./Filter.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ filter, handleChangeFilter }) {\r\n  return (\r\n    <>\r\n      <p className={s.nameFilter}>Find contacts by name</p>\r\n      <input\r\n        className={s.inputFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handleChangeFilter}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import { Component } from \"react\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport filter from \"./helpers/filter\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./App.module.css\";\r\n\r\nconst initialContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  handleAddContact = (contact) => {\r\n    this.state.contacts.some((userName) => userName.name === contact.name)\r\n      ? alert(\"A user with the same name has already been added\")\r\n      : this.setState((prevState) => ({\r\n          contacts: [\r\n            ...prevState.contacts,\r\n            { id: shortid.generate(), ...contact },\r\n          ],\r\n        }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    this.setState({contacts: contacts ?? initialContacts});\r\n  }\r\n\r\n  componentDidUpdate(props, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  deliteContact = (id) => {\r\n    this.setState({\r\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\r\n    });\r\n  };\r\n\r\n  handleChangeFilter = (e) => {\r\n    this.setState({\r\n      filter: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.app}>\r\n        <ContactForm handleAddContact={this.handleAddContact} />\r\n        <Filter\r\n          filter={this.state.filter}\r\n          handleChangeFilter={this.handleChangeFilter}\r\n        />\r\n        <ContactList\r\n          contacts={filter(this.state.contacts, this.state.filter)}\r\n          deliteContact={this.deliteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","export default function filter(contacts, filter) {\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.trim().toLowerCase())\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}